/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package fieldsystem.com.sjtu.struts.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.cfg.Configuration;

/** 
 * MyEclipse Struts
 * Creation date: 12-14-2008
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class ApplyAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		String mode1 = (String)request.getSession().getAttribute("mode1");
		if(mode1.equalsIgnoreCase("apply"))
			return executeApply(mapping,form,request,response);
		else if(mode1.equalsIgnoreCase("delete"))
			return executeDelete(mapping,form,request,response);
		else if(mode1.equalsIgnoreCase("update"))			 
			return executeUpdate(mapping,form,request,response);
		else
			return null;
	}

	private ActionForward executeUpdate(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		
		return null;
	}

	private ActionForward executeDelete(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		return null;
	}

	private ActionForward executeApply(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// show companies fields which they can choose from
		String _company_id = (String)request.getSession().getAttribute("company_id");
		try{
			sf = new Configuration().configure().buildSessionFactory();
			session = sf.openSession();
			tx = session.getTransaction();
			String hqlS = "select f.name from Fields as f,Company as c,Companyfields as cf" +
					"where  ";
		}catch(Exception e){}
		return null;
	}
	
	private SessionFactory sf = null;
	private Transaction tx = null;
	private Session session = null;
}